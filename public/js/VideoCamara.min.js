let stream;
let mediaRecorder;
let recordedChunks = [];

async function iniciarCamara() {
    try {
        stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
        const video = document.getElementById("video");
        if (!video) return;
        video.srcObject = stream;
        video.play();
    } catch (error) {
        alert("No se pudo acceder a la cÃ¡mara: " + error.message);
    }
}

document.addEventListener("DOMContentLoaded", () => {
    const capturar = document.getElementById("capturarFoto");
    const reintentar = document.getElementById("reintentarFoto");
    const iniciarGrabacion = document.getElementById("iniciarGrabacion");
    const detenerGrabacion = document.getElementById("detenerGrabacion");

    if (capturar)
        capturar.addEventListener("click", () => {
            const canvas = document.getElementById("fotoCanvas");
            const video = document.getElementById("video");
            const ctx = canvas.getContext("2d");
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
            const dataURL = canvas.toDataURL("image/jpeg");
            const descargarFoto = document.getElementById("descargarFoto");
            descargarFoto.href = dataURL;
            descargarFoto.style.display = "inline-block";
        });

    if (reintentar)
        reintentar.addEventListener("click", () => {
            const canvas = document.getElementById("fotoCanvas");
            const ctx = canvas.getContext("2d");
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            document.getElementById("descargarFoto").style.display = "none";
        });

    if (iniciarGrabacion)
        iniciarGrabacion.addEventListener("click", () => {
            recordedChunks = [];
            mediaRecorder = new MediaRecorder(stream, { mimeType: "video/webm" });

            mediaRecorder.ondataavailable = e => {
                if (e.data.size > 0) recordedChunks.push(e.data);
            };

            mediaRecorder.onstop = () => {
                const blob = new Blob(recordedChunks, { type: "video/webm" });
                const url = URL.createObjectURL(blob);
                const videoGrabado = document.getElementById("videoGrabado");
                const descargarVideo = document.getElementById("descargarVideo");
                videoGrabado.src = url;
                videoGrabado.style.display = "block";
                descargarVideo.href = url;
                descargarVideo.download = "grabacion.webm";
                descargarVideo.style.display = "inline-block";
            };

            mediaRecorder.start();
            iniciarGrabacion.disabled = true;
            detenerGrabacion.disabled = false;
        });

    if (detenerGrabacion)
        detenerGrabacion.addEventListener("click", () => {
            mediaRecorder.stop();
            document.getElementById("iniciarGrabacion").disabled = false;
            document.getElementById("detenerGrabacion").disabled = true;
        });
});

